
========================================================================

** ELF Header Information

    File Name: .\obj\nuc972.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: 0x00000000
    Flags: EF_ARM_HASENTRY + EF_ARM_ABI_FLOAT_SOFT (0x05000202)

    ARM ELF revision: 5 (ABI version 2)

    Conforms to Soft float procedure-call standard

    Built with
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armasm [4d35e1]
    Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 14

    Program header offset: 65240 (0x0000fed8)
    Section header offset: 65272 (0x0000fef8)

    Section header string table index: 13

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_R + PF_ARM_ENTRY]
    Size : 464 bytes
    Virtual address: 0x00000000 (Alignment 4)


========================================================================

** Section #1 'ER_IROM1' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 464 bytes (alignment 4)
    Address: 0x00000000

    $a
    NUC_INIT
    Vector_Table
        0x00000000:    ea000014    ....    B        Reset_Go ; 0x58
        0x00000004:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x24] = 0x40
        0x00000008:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x28] = 0x44
        0x0000000c:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x2c] = 0x48
        0x00000010:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x30] = 0x4c
    $d
        0x00000014:    00000000    ....    DCD    0
    $a
        0x00000018:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x38] = 0x50
        0x0000001c:    e59ff018    ....    LDR      pc,[pc,#24] ; [0x3c] = 0x54
    $d
        0x00000020:    00000058    X...    DCD    88
        0x00000024:    00000040    @...    DCD    64
        0x00000028:    00000044    D...    DCD    68
        0x0000002c:    00000048    H...    DCD    72
        0x00000030:    0000004c    L...    DCD    76
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    00000050    P...    DCD    80
        0x0000003c:    00000054    T...    DCD    84
    $a
    Undefined_Handler
        0x00000040:    eafffffe    ....    B        Undefined_Handler ; 0x40
    SWI_Handler1
        0x00000044:    eafffffe    ....    B        SWI_Handler1 ; 0x44
    Prefetch_Handler
        0x00000048:    eafffffe    ....    B        Prefetch_Handler ; 0x48
    Abort_Handler
        0x0000004c:    eafffffe    ....    B        Abort_Handler ; 0x4c
    IRQ_Handler
        0x00000050:    eafffffe    ....    B        IRQ_Handler ; 0x50
    FIQ_Handler
        0x00000054:    eafffffe    ....    B        FIQ_Handler ; 0x54
    Reset_Go
        0x00000058:    e321f0db    ..!.    MSR      CPSR_c,#0xdb
        0x0000005c:    e59fd034    4...    LDR      sp,[pc,#52] ; [0x98] = 0x2000000
        0x00000060:    e321f0d7    ..!.    MSR      CPSR_c,#0xd7
        0x00000064:    e59fd030    0...    LDR      sp,[pc,#48] ; [0x9c] = 0x1ffff00
        0x00000068:    e321f0d2    ..!.    MSR      CPSR_c,#0xd2
        0x0000006c:    e59fd02c    ,...    LDR      sp,[pc,#44] ; [0xa0] = 0x1fff800
        0x00000070:    e321f0d1    ..!.    MSR      CPSR_c,#0xd1
        0x00000074:    e59fd028    (...    LDR      sp,[pc,#40] ; [0xa4] = 0x1fffe00
        0x00000078:    e321f0df    ..!.    MSR      CPSR_c,#0xdf
        0x0000007c:    e59fd024    $...    LDR      sp,[pc,#36] ; [0xa8] = 0x1ffd800
        0x00000080:    e321f0d3    ..!.    MSR      CPSR_c,#0xd3
        0x00000084:    e59fd020     ...    LDR      sp,[pc,#32] ; [0xac] = 0x1fffc00
        0x00000088:    ee110f10    ....    MRC      p15,#0x0,r0,c1,c0,#0
        0x0000008c:    e3c00a02    ....    BIC      r0,r0,#0x2000
        0x00000090:    ee010f10    ....    MCR      p15,#0x0,r0,c1,c0,#0
        0x00000094:    ea000005    ....    B        __main ; 0xb0
    $d
        0x00000098:    02000000    ....    DCD    33554432
        0x0000009c:    01ffff00    ....    DCD    33554176
        0x000000a0:    01fff800    ....    DCD    33552384
        0x000000a4:    01fffe00    ....    DCD    33553920
        0x000000a8:    01ffd800    ....    DCD    33544192
        0x000000ac:    01fffc00    ....    DCD    33553408
    $a
    !!!main
    __main
        0x000000b0:    e1a00000    ....    MOV      r0,r0
        0x000000b4:    eb000001    ....    BL       __rt_entry ; 0xc0
    $t
    .ARM.Collect$$libinit$$00000000
    __rt_lib_init
        0x000000b8:    b51f        ..      PUSH     {r0-r4,lr}
    .ARM.Collect$$libinit$$00000002
    .ARM.Collect$$libinit$$00000004
    .ARM.Collect$$libinit$$0000000A
    .ARM.Collect$$libinit$$0000000C
    .ARM.Collect$$libinit$$0000000E
    .ARM.Collect$$libinit$$00000011
    .ARM.Collect$$libinit$$00000013
    .ARM.Collect$$libinit$$00000015
    .ARM.Collect$$libinit$$00000017
    .ARM.Collect$$libinit$$00000019
    .ARM.Collect$$libinit$$0000001B
    .ARM.Collect$$libinit$$0000001D
    .ARM.Collect$$libinit$$0000001F
    .ARM.Collect$$libinit$$00000021
    .ARM.Collect$$libinit$$00000023
    .ARM.Collect$$libinit$$00000025
    .ARM.Collect$$libinit$$0000002C
    .ARM.Collect$$libinit$$0000002E
    .ARM.Collect$$libinit$$00000030
    .ARM.Collect$$libinit$$00000032
    .ARM.Collect$$libinit$$00000033
    __rt_lib_init_alloca_1
    __rt_lib_init_argv_1
    __rt_lib_init_atexit_1
    __rt_lib_init_clock_1
    __rt_lib_init_cpp_1
    __rt_lib_init_exceptions_1
    __rt_lib_init_fp_1
    __rt_lib_init_fp_trap_1
    __rt_lib_init_getenv_1
    __rt_lib_init_heap_1
    __rt_lib_init_lc_collate_1
    __rt_lib_init_lc_ctype_1
    __rt_lib_init_lc_monetary_1
    __rt_lib_init_lc_numeric_1
    __rt_lib_init_lc_time_1
    __rt_lib_init_preinit_1
    __rt_lib_init_rand_1
    __rt_lib_init_return
    __rt_lib_init_signal_1
    __rt_lib_init_stdio_1
    __rt_lib_init_user_alloc_1
        0x000000ba:    bd1f        ..      POP      {r0-r4,pc}
    .ARM.Collect$$libshutdown$$00000000
    __rt_lib_shutdown
        0x000000bc:    b510        ..      PUSH     {r4,lr}
    .ARM.Collect$$libshutdown$$00000002
    .ARM.Collect$$libshutdown$$00000004
    .ARM.Collect$$libshutdown$$00000007
    .ARM.Collect$$libshutdown$$0000000A
    .ARM.Collect$$libshutdown$$0000000C
    .ARM.Collect$$libshutdown$$0000000F
    .ARM.Collect$$libshutdown$$00000010
    __rt_lib_shutdown_cpp_1
    __rt_lib_shutdown_fp_trap_1
    __rt_lib_shutdown_heap_1
    __rt_lib_shutdown_return
    __rt_lib_shutdown_signal_1
    __rt_lib_shutdown_stdio_1
    __rt_lib_shutdown_user_alloc_1
        0x000000be:    bd10        ..      POP      {r4,pc}
    $a
    .ARM.Collect$$rtentry$$00000000
    .ARM.Collect$$rtentry$$00000002
    .ARM.Collect$$rtentry$$00000004
    __rt_entry
    __rt_entry_presh_1
    __rt_entry_sh
        0x000000c0:    eb000013    ....    BL       __user_setup_stackheap ; 0x114
        0x000000c4:    e1a01002    ....    MOV      r1,r2
    .ARM.Collect$$rtentry$$00000009
    .ARM.Collect$$rtentry$$0000000A
    __rt_entry_li
    __rt_entry_postsh_1
        0x000000c8:    fafffffa    ....    BLX      __rt_lib_init ; 0xb8
    .ARM.Collect$$rtentry$$0000000C
    .ARM.Collect$$rtentry$$0000000D
    __rt_entry_main
    __rt_entry_postli_1
        0x000000cc:    e59fc01c    ....    LDR      r12,[pc,#28] ; [0xf0] = 0x90
        0x000000d0:    e08cc00f    ....    ADD      r12,r12,pc
        0x000000d4:    e31c0001    ....    TST      r12,#1
        0x000000d8:    128fe00d    ....    ADRNE    lr,{pc}+0x15 ; 0xed
        0x000000dc:    01a0e00f    ....    MOVEQ    lr,pc
        0x000000e0:    e12fff1c    ../.    BX       r12
        0x000000e4:    e28fc001    ....    ADR      r12,{pc}+9 ; 0xed
        0x000000e8:    e12fff1c    ../.    BX       r12
    $t
        0x000000ec:    f000f80a    ....    BL       exit ; 0x104
    $d
        0x000000f0:    00000090    ....    DCD    144
    $a
    .ARM.Collect$$rtexit$$00000000
    __rt_exit
        0x000000f4:    e92d0003    ..-.    PUSH     {r0,r1}
    .ARM.Collect$$rtexit$$00000002
    .ARM.Collect$$rtexit$$00000003
    __rt_exit_ls
    __rt_exit_prels_1
        0x000000f8:    faffffef    ....    BLX      __rt_lib_shutdown ; 0xbc
    .ARM.Collect$$rtexit$$00000004
    __rt_exit_exit
        0x000000fc:    e8bd0003    ....    POP      {r0,r1}
        0x00000100:    eb000006    ....    BL       _sys_exit ; 0x120
    $t
    .text
    exit
        0x00000104:    b510        ..      PUSH     {r4,lr}
        0x00000106:    0004        ..      MOVS     r4,r0
        0x00000108:    46c0        .F      MOV      r8,r8
        0x0000010a:    46c0        .F      MOV      r8,r8
        0x0000010c:    0020         .      MOVS     r0,r4
        0x0000010e:    f7ffeff2    ....    BLX      __rt_exit ; 0xf4
        0x00000112:    bd10        ..      POP      {r4,pc}
    $a
    i.__user_setup_stackheap
    __user_setup_stackheap
        0x00000114:    e59f0000    ....    LDR      r0,[pc,#0] ; [0x11c] = 0x1d0
        0x00000118:    e12fff1e    ../.    BX       lr
    $d
        0x0000011c:    000001d0    ....    DCD    464
    $a
    i._sys_exit
    _sys_exit
        0x00000120:    eafffffe    ....    B        _sys_exit ; 0x120
    i.delay_ms
    delay_ms
        0x00000124:    e92d4001    .@-.    PUSH     {r0,lr}
        0x00000128:    e24dd004    ..M.    SUB      sp,sp,#4
        0x0000012c:    e59d0004    ....    LDR      r0,[sp,#4]
        0x00000130:    e3500000    ..P.    CMP      r0,#0
        0x00000134:    159f1028    (...    LDRNE    r1,[pc,#40] ; [0x164] = 0xc350
        0x00000138:    0a000008    ....    BEQ      0x160 ; delay_ms + 60
        0x0000013c:    e1a00001    ....    MOV      r0,r1
        0x00000140:    e58d1000    ....    STR      r1,[sp,#0]
        0x00000144:    e2500001    ..P.    SUBS     r0,r0,#1
        0x00000148:    e58d0000    ....    STR      r0,[sp,#0]
        0x0000014c:    1afffffc    ....    BNE      0x144 ; delay_ms + 32
        0x00000150:    e59d0004    ....    LDR      r0,[sp,#4]
        0x00000154:    e2500001    ..P.    SUBS     r0,r0,#1
        0x00000158:    e58d0004    ....    STR      r0,[sp,#4]
        0x0000015c:    1afffff6    ....    BNE      0x13c ; delay_ms + 24
        0x00000160:    e8bd800c    ....    POP      {r2,r3,pc}
    $d
        0x00000164:    0000c350    P...    DCD    50000
    $a
    i.main
    main
        0x00000168:    e92d400e    .@-.    PUSH     {r1-r3,lr}
        0x0000016c:    e59f0054    T...    LDR      r0,[pc,#84] ; [0x1c8] = 0xb0000218
        0x00000170:    e58d0004    ....    STR      r0,[sp,#4]
        0x00000174:    e59f0050    P...    LDR      r0,[pc,#80] ; [0x1cc] = 0xb8003040
        0x00000178:    e59d1004    ....    LDR      r1,[sp,#4]
        0x0000017c:    e58d0008    ....    STR      r0,[sp,#8]
        0x00000180:    e2800004    ....    ADD      r0,r0,#4
        0x00000184:    e58d0000    ....    STR      r0,[sp,#0]
        0x00000188:    e3a00008    ....    MOV      r0,#8
        0x0000018c:    e5810000    ....    STR      r0,[r1,#0]
        0x00000190:    e59d1008    ....    LDR      r1,[sp,#8]
        0x00000194:    e3a00003    ....    MOV      r0,#3
        0x00000198:    e5810000    ....    STR      r0,[r1,#0]
        0x0000019c:    e3a04002    .@..    MOV      r4,#2
        0x000001a0:    e3a05001    .P..    MOV      r5,#1
        0x000001a4:    e59d0000    ....    LDR      r0,[sp,#0]
        0x000001a8:    e5804000    .@..    STR      r4,[r0,#0]
        0x000001ac:    e3a00f4b    K...    MOV      r0,#0x12c
        0x000001b0:    ebffffdb    ....    BL       delay_ms ; 0x124
        0x000001b4:    e59d0000    ....    LDR      r0,[sp,#0]
        0x000001b8:    e5805000    .P..    STR      r5,[r0,#0]
        0x000001bc:    e3a00f4b    K...    MOV      r0,#0x12c
        0x000001c0:    ebffffd7    ....    BL       delay_ms ; 0x124
        0x000001c4:    eafffff6    ....    B        0x1a4 ; main + 60
    $d
        0x000001c8:    b0000218    ....    DCD    2952790552
        0x000001cc:    b8003040    @0..    DCD    3087020096

** Section #2 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 1476 bytes


** Section #3 '.debug_frame' (SHT_PROGBITS)
    Size   : 372 bytes


** Section #4 '.debug_info' (SHT_PROGBITS)
    Size   : 2836 bytes


** Section #5 '.debug_line' (SHT_PROGBITS)
    Size   : 760 bytes


** Section #6 '.debug_loc' (SHT_PROGBITS)
    Size   : 192 bytes


** Section #7 '.debug_macinfo' (SHT_PROGBITS)
    Size   : 48304 bytes


** Section #8 '.debug_pubnames' (SHT_PROGBITS)
    Size   : 183 bytes


** Section #9 '.symtab' (SHT_SYMTAB)
    Size   : 2960 bytes (alignment 4)
    String table #10 '.strtab'
    Last local symbol no. 132


** Section #10 '.strtab' (SHT_STRTAB)
    Size   : 3216 bytes


** Section #11 '.note' (SHT_NOTE)
    Size   : 20 bytes (alignment 4)


** Section #12 '.comment' (SHT_PROGBITS)
    Size   : 4252 bytes


** Section #13 '.shstrtab' (SHT_STRTAB)
    Size   : 152 bytes


